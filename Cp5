export interface Comment {
  id: number;
  author: string;
  text: string;
}

export interface Article {
  id: number;
  title: string;
  date: string;
  image: string;
  content: string;
  category: string;
  tags: string[];
  comments: Comment[];
}


import { Article } from '../types';

export const news: Article[] = [
  {
    id: 1,
    title: "Account boy little hair truth soon.",
    date: "24/09/2025",
    image: "/src/assets/images/placeholder1.jpg",
    content: "Windows without local hand ability. International tough force give although forever. To this to he you that one of their own...",
    category: "Tecnologia",
    tags: ["tecnologia", "futuro"],
    comments: [
      { id: 1, author: "Joe Hull", text: "Nice one!" },
      { id: 2, author: "Mellisa Jones", text: "I'll be reading this!" }
    ]
  },
  {
    id: 2,
    title: "Clows dress together and all.",
    date: "23/09/2025",
    image: "/src/assets/images/placeholder2.jpg",
    content: "Here is your content for this second article. It can be longer and more detailed to fill the page.",
    category: "Entretenimento",
    tags: ["diversão", "estilo"],
    comments: []
  },
  // Adicione mais 8 ou mais notícias aqui para cumprir o requisito.
];

import React, { useState } from 'react';
import { news } from '../data/newsData';
import ArticleCard from '../components/ArticleCard';

const Home: React.FC = () => {
  const [searchTerm, setSearchTerm] = useState('');

  const filteredNews = news.filter(article =>
    article.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
    article.content.toLowerCase().includes(searchTerm.toLowerCase()) ||
    article.category.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-3xl font-bold text-center my-6">Bem vindo!</h1>
      
      {/* Campo de busca */}
      <div className="mb-6">
        <input
          type="text"
          placeholder="Buscar notícias..."
          className="w-full p-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />
      </div>

      {/* Lista de notícias */}
      {filteredNews.length > 0 ? (
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
          {filteredNews.map(article => (
            <ArticleCard key={article.id} article={article} />
          ))}
        </div>
      ) : (
        <p className="text-center text-gray-500">Nenhum artigo encontrado.</p>
      )}
    </div>
  );
};

export default Home;


import React from 'react';
import { Article } from '../types';
import { Link } from 'react-router-dom';

interface ArticleCardProps {
  article: Article;
}

const ArticleCard: React.FC<ArticleCardProps> = ({ article }) => {
  // Limita a exibição do conteúdo a 50 caracteres, conforme a instrução
  const limitedContent = article.content.substring(0, 50) + '...';

  return (
    <Link to={`/article/${article.id}`}>
      <div className="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden">
        <img src={article.image} alt={article.title} className="w-full h-48 object-cover" />
        <div className="p-4">
          <h2 className="text-xl font-semibold mb-2">{article.title}</h2>
          <p className="text-gray-600 text-sm">{limitedContent}</p>
        </div>
      </div>
    </Link>
  );
};

export default ArticleCard;


import React from 'react';
import { useParams, Link } from 'react-router-dom';
import { news } from '../data/newsData';
import Comment from '../components/Comment';

const ArticlePage: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const article = news.find(a => a.id === Number(id));

  if (!article) {
    return (
      <div className="container mx-auto p-4 text-center text-red-500">
        <p>Artigo não encontrado!</p>
        <Link to="/" className="text-blue-500 hover:underline mt-4 inline-block">Voltar para a Home</Link>
      </div>
    );
  }

  return (
    <div className="container mx-auto p-4">
      <Link to="/" className="text-blue-500 hover:underline mb-4 inline-block">&lt; Voltar para a Home</Link>
      
      <div className="bg-white rounded-lg shadow-md p-6">
        <img src={article.image} alt={article.title} className="w-full h-80 object-cover rounded-md mb-6" />
        <h1 className="text-4xl font-bold mb-2">{article.title}</h1>
        <p className="text-gray-500 text-sm mb-4">{article.date} | Categoria: {article.category}</p>
        <p className="text-gray-700 leading-relaxed">{article.content}</p>
      </div>

      <div className="mt-8">
        <h2 className="text-2xl font-semibold mb-4">Comentários</h2>
        {article.comments.length > 0 ? (
          article.comments.map(comment => (
            <Comment key={comment.id} comment={comment} />
          ))
        ) : (
          <p className="text-gray-500">Nenhum comentário ainda.</p>
        )}
      </div>
    </div>
  );
};

export default ArticlePage;


import React from 'react';
import { Comment as CommentType } from '../types';

interface CommentProps {
  comment: CommentType;
}

const Comment: React.FC<CommentProps> = ({ comment }) => {
  return (
    <div className="bg-gray-100 p-4 rounded-md mb-4">
      <p className="font-semibold">{comment.author}</p>
      <p className="text-gray-700">{comment.text}</p>
    </div>
  );
};

export default Comment;


import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Home from './pages/Home';
import ArticlePage from './pages/ArticlePage';
import Header from './components/Header'; // Opcional, mas recomendado

const App: React.FC = () => {
  return (
    <Router>
      {/* Se quiser adicionar um cabeçalho global */}
      {/* <Header /> */}
      <main>
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/article/:id" element={<ArticlePage />} />
        </Routes>
      </main>
    </Router>
  );
};

export default App;



